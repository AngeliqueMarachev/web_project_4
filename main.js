!function(){"use strict";function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s,r,n,i,o){e(this,"removeCard",(()=>{this._cardElement.remove(),this._cardElement=null})),e(this,"_setEventListeners",(()=>{this._cardLikeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._deleteCardButton.addEventListener("click",(()=>this._handleDeleteClick())),this._cardImage.addEventListener("click",(()=>this._handleCardClick(this._name,this._link)))})),e(this,"createCardElement",(()=>{const e=document.querySelector(this._cardTemplateSelector).content.querySelector(".gallery__card");return this._cardElement=e.cloneNode(!0),this._cardImage=this._cardElement.querySelector(".gallery__item"),this._cardName=this._cardElement.querySelector(".gallery__text"),this._cardLikeButton=this._cardElement.querySelector(".gallery__heart-icon"),this._deleteCardButton=this._cardElement.querySelector(".gallery__delete-button"),this._likeCounter=this._cardElement.querySelector(".gallery__likes"),this._cardImage.src=this._link,this._cardImage.alt="".concat(this._name),this._cardName.textContent=this._name,this._setEventListeners(),this.setLikes(this._likes),this._userId!==this._ownerId&&(this._deleteCardButton.style.display="none"),this._cardElement})),this._data=t,this._name=t.name,this._link=t.link,this._likes=t.likes,this._id=t._id,this._userId=r,this._ownerId=t.owner._id,this._cardTemplateSelector=s,this._handleCardClick=n,this._handleDeleteClick=i,this._handleLikeIcon=o}getId(){return this._id}setLikes(e){this._likes=e;const t=this._likes.length;this._likeCounter.textContent=t,this.isLiked()?this._cardLikeButton.classList.add("gallery__heart-icon_clicked"):this._cardLikeButton.classList.remove("gallery__heart-icon_clicked")}isLiked(){return this._likes.find((e=>e._id===this._userId))}}function s(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r{constructor(e,t){s(this,"_showInputError",((e,t)=>{const{inputErrorClass:s,errorClass:r}=this._settings,n=this._formEl.querySelector("#".concat(e.id,"-error"));e.classList.add(r),n.classList.add(s),n.textContent=t})),s(this,"_hideInputError",(e=>{const{inputErrorClass:t,errorClass:s}=this._settings,r=this._formEl.querySelector("#".concat(e.id,"-error"));e.classList.remove(s),r.classList.remove(t),r.textContent=""})),s(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),s(this,"_toggleButton",(()=>{this._isFormValid()?this._enableButton():this.disableButton()})),s(this,"disableButton",(()=>{this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0})),s(this,"_enableButton",(()=>{this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1})),s(this,"_isFormValid",(()=>this._inputList.every((e=>e.validity.valid)))),s(this,"_setEventListeners",(()=>{this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))})),this._settings=e,this._formEl=t,this._inputList=Array.from(this._formEl.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formEl.querySelector(this._settings.submitButtonSelector)}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButton()}enableValidation(){this._formEl.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}}function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class i{constructor(e){n(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),n(this,"_handleOverlayClose",(e=>{e.target.classList.contains("popup_open")&&this.close()})),this._popupElement=document.querySelector(e),this._button=this._popupElement.querySelector(".popup__button")}open(){this._popupElement.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleOverlayClose)}close(){this._popupElement.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleOverlayClose)}setEventListeners(){this._popupElement.querySelector(".popup__close").addEventListener("mousedown",(()=>{this.close()}))}}class o extends i{constructor(e,t){super(e),this._form=this._popupElement.querySelector(".popup__form"),this._button=this._popupElement.querySelector(".popup__button"),this._handleFormSubmit=t,this._inputs=Array.from(this._form.querySelectorAll(".popup__input"))}_getInputValues(){const e={};return this._inputs.forEach((t=>{const s=t.name,r=t.value;e[s]=r})),e}changeButtonText(e){this._button.textContent=e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){this._form.reset(),super.close()}}const a={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},l=document.querySelector(".profile__edit-button"),c=document.querySelector(".popup__form-edit"),h=document.querySelector(".profile__add-button"),u=(document.querySelector(".profile__name"),document.querySelector(".profile__occupation"),document.querySelector(".profile__avatar-container")),_=c.querySelector(".popup__input_type_name"),d=c.querySelector(".popup__input_type_occupation"),p=(document.querySelector(".popup_type_profile"),document.querySelector(".popup__form-create")),m=(document.querySelector(".popup__close_profile"),document.querySelector(".gallery__grid"),document.querySelector(".popup_type_preview")),v=(m.querySelector(".popup__image"),m.querySelector(".popup__text"),document.querySelector(".popup_type_avatar-change"));document.getElementById(".logo");const y=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject("".concat(e.status," error!"))}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((e=>this._checkResponse(e)))}getUserInfo(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((e=>this._checkResponse(e)))}editProfile(e){let{name:t,about:s}=e;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then((e=>this._checkResponse(e)))}getProfile(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((e=>this._checkResponse(e)))}addCard(e){let{name:t,link:s}=e;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then((e=>this._checkResponse(e)))}likeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}removeLike(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}editAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((e=>this._checkResponse(e)))}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"42b9ea6f-407e-4ca1-96e0-0f09ff65d270","Content-Type":"application/json"}});let E;const f=new class{constructor(e){let{userNameSelector:t,userOccupationSelector:s,userAvatarSelector:r}=e;this._profileName=document.querySelector(t),this._profileOccupation=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){return{user:this._profileName.textContent,occupation:this._profileOccupation.textContent,avatar:this._avatarElement.src}}setUserInfo(e){let{user:t,occupation:s,avatar:r}=e;this._profileName.textContent=t||this._name,this._profileOccupation.textContent=s||this._occupation}setUserAvatar(e){this._avatarElement.src=e||this._avatar}setAvatarVisible(){this._avatarElement.style.visibility="visible"}}({userNameSelector:".profile__name",userOccupationSelector:".profile__occupation",userAvatarSelector:".profile__avatar"});Promise.all([y.getUserInfo(),y.getInitialCards()]).then((e=>{let[t,s]=e;E=t._id,f.setUserAvatar(t),f.setUserAvatar(t.avatar),L.renderItems(s)})).then((()=>f.setAvatarVisible())).catch(console.log);const g=new r(a,c);g.enableValidation();const b=new r(a,p);b.enableValidation();const S=new r(a,v);S.enableValidation();const k=e=>{const s=new t(e,"#gallery-template",E,((e,t)=>{C.open(e,t)}),(()=>{w.open(s)}),(()=>{s.isLiked()?y.removeLike(s.getId()).then((e=>{s.setLikes(e.likes)})).catch(console.log):y.likeCard(s.getId()).then((e=>{s.setLikes(e.likes)})).catch(console.log)}));L.addItem(s.createCardElement())},L=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:k},".gallery__grid"),C=new class extends i{constructor(e){super(e),this._image=this._popupElement.querySelector(".popup__image"),this._imageCaption=this._popupElement.querySelector(".popup__text")}open(e,t){super.open(),this._image.src=t,this._image.alt=e,this._imageCaption.textContent=e}}(".popup_type_preview"),q=new o(".popup_type_profile",(e=>{q.changeButtonText("Saving..."),y.editProfile({name:e.user,about:e.occupation}).then((e=>{f.setUserInfo({user:e.name,occupation:e.about}),q.close()})).catch(console.log).finally((()=>{q.changeButtonText("Save")}))})),I=new o(".popup_type_add-card",(e=>{I.changeButtonText("Saving..."),y.addCard({name:e.name,link:e.link}).then((e=>{k(e),I.close()})).catch(console.log).finally((()=>{I.changeButtonText("Save")}))})),B=new o(".popup_type_avatar-change",(e=>{B.changeButtonText("Saving..."),y.editAvatar(e).then((e=>{f.setUserAvatar(e.avatar),B.close()})).catch(console.log).finally((()=>{B.changeButtonText("Save")}))})),w=new class extends i{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),this._form=this._popupElement.querySelector(".popup__form"),this._button=this._popupElement.querySelector(".popup__button"),this._handleFormSubmit=s}open(e){super.open(),this._button.textContent="Yes",this._card=e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._button.textContent="Deleting...",this._handleFormSubmit(this._card)}))}}({popupSelector:".popup_type_confirm-delete",handleFormSubmit:e=>{y.deleteCard(e.getId()).then((()=>{e.removeCard()})).catch(console.log).finally((()=>{w.close()}))}});l.addEventListener("click",(()=>{q.open();const e=f.getUserInfo();_.value=e.user,d.value=e.occupation,g.resetValidation(),g.disableButton()})),h.addEventListener("click",(()=>{I.open(),b.resetValidation(),b.disableButton()})),u.addEventListener("click",(()=>{B.open(),S.resetValidation()})),q.setEventListeners(),I.setEventListeners(),C.setEventListeners(),B.setEventListeners(),w.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,