!function(){"use strict";function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s,i){let{title:o,link:n}=t;e(this,"_toggleLikeButton",(()=>{this._cardLikeButton.classList.toggle("gallery__heart-icon_clicked")})),e(this,"_deleteCard",(()=>{this._cardElement.remove(),this._cardElement=null})),e(this,"_addEventListeners",(()=>{this._cardLikeButton.addEventListener("click",(()=>this._toggleLikeButton())),this._deleteCardButton.addEventListener("click",(()=>this._deleteCard())),this._cardImage.addEventListener("click",(()=>this._handleCardClick(this._title,this._link)))})),e(this,"createCardElement",(()=>{const e=document.querySelector(this._cardTemplateSelector).content.querySelector(".gallery__card");return this._cardElement=e.cloneNode(!0),this._cardImage=this._cardElement.querySelector(".gallery__item"),this._cardTitle=this._cardElement.querySelector(".gallery__text"),this._cardLikeButton=this._cardElement.querySelector(".gallery__heart-icon"),this._deleteCardButton=this._cardElement.querySelector(".gallery__delete-button"),this._cardImage.src=this._link,this._cardImage.alt="".concat(this._title),this._cardTitle.textContent=this._title,this._addEventListeners(),this._cardElement})),this._title=o,this._link=n,this._cardTemplateSelector=s,this._handleCardClick=i}}function s(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class i{constructor(e,t){s(this,"_showInputError",((e,t)=>{const{inputErrorClass:s,errorClass:i}=this._settings,o=this._formEl.querySelector("#".concat(e.id,"-error"));e.classList.add(i),o.classList.add(s),o.textContent=t})),s(this,"_hideInputError",(e=>{const{inputErrorClass:t,errorClass:s}=this._settings,i=this._formEl.querySelector("#".concat(e.id,"-error"));e.classList.remove(s),i.classList.remove(t),i.textContent=""})),s(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),s(this,"_toggleButton",(()=>{this._isFormValid()?this._enableButton():this.disableButton()})),s(this,"disableButton",(()=>{this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0})),s(this,"_enableButton",(()=>{this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1})),s(this,"_isFormValid",(()=>this._inputList.every((e=>e.validity.valid)))),s(this,"_setEventListeners",(()=>{this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))})),this._settings=e,this._formEl=t,this._inputList=Array.from(this._formEl.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formEl.querySelector(this._settings.submitButtonSelector)}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButton()}enableValidation(){this._formEl.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}}function o(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class n{constructor(e){o(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),o(this,"_handleOverlayClose",(e=>{e.target.classList.contains("popup_open")&&this.close()})),this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleOverlayClose)}close(){this._popupElement.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleOverlayClose)}setEventListeners(){this._popupElement.querySelector(".popup__close").addEventListener("mousedown",(()=>{this.close()}))}}class r extends n{constructor(e,t){super(e),this._form=this._popupElement.querySelector(".popup__form"),this._handleFormSubmit=t,this._inputs=Array.from(this._form.querySelectorAll(".popup__input"))}_getInputValues(){const e={};return this._inputs.forEach((t=>{const s=t.name,i=t.value;e[s]=i})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){this._form.reset(),super.close()}}const l={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},a=document.querySelector(".profile__edit-button"),c=document.querySelector(".popup__form-edit"),u=document.querySelector(".profile__add-button"),_=(document.querySelector(".profile__name"),document.querySelector(".profile__occupation"),c.querySelector(".popup__input_type_name")),p=c.querySelector(".popup__input_type_occupation"),d=(document.querySelector(".popup_type_profile"),document.querySelector(".popup__form-create")),h=(document.querySelector(".popup__close_profile"),document.querySelector(".gallery__grid"),document.querySelector(".popup_type_preview"));h.querySelector(".popup__image"),h.querySelector(".popup__text"),new class{constructor(e,t){this._baseUrl=e,this._headers=t}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText))).catch((e=>console.log(e)))}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"9398a483-484e-4ebd-a374-b6b3b985e9c4","Content-Type":"application/json"}}).getInitialCards().then((e=>{console.log("res",e)}));const m=new i(l,c);m.enableValidation(),m.disableButton();const y=new i(l,d);y.enableValidation(),y.disableButton();const g=new r(".popup_type_profile",(e=>{f.setUserInfo(e.name,e.occupation),g.close()}));g.setEventListeners();const E=new r(".popup_type_add-card",(e=>{v(e),y.resetValidation(),E.close()}));E.setEventListeners();const b=new class extends n{constructor(e){super(e),this._image=this._popupElement.querySelector(".popup__image"),this._imageCaption=this._popupElement.querySelector(".popup__text")}open(e,t){super.open(),this._image.src=t,this._image.alt=e,this._imageCaption.textContent=e}}(".popup_type_preview");b.setEventListeners();const v=e=>{const s=new t(e,"#gallery-template",((e,t)=>{b.open(e,t)}));L.addItem(s.createCardElement())},f=new class{constructor(e){let{userNameSelector:t,userOccupationSelector:s}=e;this._profileName=document.querySelector(t),this._profileOccupation=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,occupation:this._profileOccupation.textContent}}setUserInfo(e,t){this._profileName.textContent=e,this._profileOccupation.textContent=t}}({userNameSelector:".profile__name",userOccupationSelector:".profile__occupation"}),L=new class{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{title:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{title:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{title:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{title:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{title:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{title:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>v(e)},".gallery__grid");L.renderItems(),a.addEventListener("click",(()=>{g.open();const e=f.getUserInfo();_.value=e.name,p.value=e.occupation})),u.addEventListener("click",(()=>{E.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,